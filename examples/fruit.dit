// An extremely simple dit to demonstrate dit syntax

// A dit class
Fruit {
    String value; // A class attribute. String is the only primitive type.
    print value; // print a specific attribute

    // Language agnostic validators
    validator Javascript {{
        let fruits = ['apple', 'banana', 'pear', 'strawberry', 'kiwi'];

        // Access to any dit variable in code with double @ escape
        // Must type @@@@ to get a literal double @ in code.
        // Can also escape double right brace with @@}}
        let value = @@value;
        if (fruits.indexOf(value) === -1) { 
            return `"${value}" is not a valid fruit.`; 
        }
        return true;
    }}
}

FavoriteFruits {
    // Attributes can be instances of other classes
    Fruit leastFavorite;
    Fruit favorite;

    // Print can use code, similar to toString
    print Javascript {{return `Favorite: ${@@favorite.value} Least Favorite: ${@@leastFavorite.value}`;}}
}

// Declaration/instantiation.
Fruit fav;
fav.value = 'kiwi';

FavoriteFruits favorites;
favorites.favorite = fav; // Object assignment
favorites.leastFavorite.value = 'pear';

// At this point, the validators for all objects get run.
