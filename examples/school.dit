Color {
    String value;
    print value;
    validator Javascript {{
        let colors = ['Red', 'Orange', 'Yellow', 'Green', 'Blue', 'Purple', 'Brown', 'Magenta', 'Tan', 'Cyan', 'Olive', 'Maroon', 'Navy', 'Aquamarine', 'Turquoise', 'Silver', 'Lime', 'Teal', 'Indigo', 'Violet', 'Pink', 'Black', 'White', 'Gray']
        if (colors.indexOf(@@value) === -1) { 
            return `"${@@value}" is not a valid color.`; 
        }
        return true;
    }}
}

Food {
    String value;
    print value;
    validator Javascript {{
        let foods = ['Pasta', 'French Fries', 'Ice Cream', 'Bread', 'Fried Rice', 'Pancakes', 'Burger', 'Pizza', 'Pumpkin Pie', 'Chicken Pot Pie', 'Banana', 'Apple Pie', 'Bagel', 'Muffins', 'Alfredo Sauce', 'Reese\'s Peanut Cups', 'Ice Cream Cake', 'Cheesecake', 'Cheese', 'Banana Bread', 'Potato Chips', 'Cheetos', 'Doritos', 'Tacos', 'Burritos', 'Chimichanga', 'Enchilada', 'Salsa', 'Marinara Sauce', 'Broccoli', 'Chocolate Covered Strawberries', 'Kiwi', 'Tomato', 'Salad', 'Steak', 'Chicken Tenders', 'Grilled Chicken', 'Ribs', 'Biscuits and Gravy', 'Hot Dogs', 'Fried Chicken', 'Roasted Chicken and Garlic', 'Eggs', 'Bacon', 'Sausage', 'Mashed Potatoes', 'Stuffing', 'Brownies', 'Cookies', 'Submarine Sandwiches', 'Donuts', 'Turkey', 'Cranberry', 'Gravy', 'Green Beans', 'Mac and Cheese', 'Soup', 'Lamb Chops', 'Fried Pork Chops and Gravy', 'Ham', 'Sushi', 'Teriyaki', 'Popcorn', 'Shrimp', 'Lasagna', 'Ravioli', 'Gelatin', 'Pudding', 'Meatballs', 'Gyro Sandwich', 'Pulled Pork', 'Nachos', 'Onion Rings', 'Chocolate Cake', 'Carrot Cake', 'Tater Tots', 'French Toast', 'Baked Potato', 'Olive Garden Breadsticks', 'Crepes', 'Chicken Nuggets', 'Croissant', 'Apple Sauce', 'Green Bean Casserole With Fried Onions', 'Sweet Potatoes', 'Potato', 'Cantaloupe', 'Apple', 'Orange', 'Strawberries', 'Peaches', 'Honeydew', 'Ginger Bread', 'Mango', 'Raspberries', 'Blueberries', 'Corn', 'Tamale', 'Fried Zucchini Blossoms', 'Calzone']
        if (foods.indexOf(@@value) === -1) { 
            return `"${@@value}" is not a valid food.`; 
        }
        return true;
    }}
}

import Names from 'https://raw.githubusercontent.com/isaiahshiner/dits/master/dits/Name.dit';

Kid {
    Names.FullName name;
    Color favoriteColor;
    list Food favoriteFoods;
}

Email {
    String value;
    print value;
    validator Javascript {{
        let re = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/;
        if(!re.test(@@value)) {
            return `"${@@value}" did not pass the email regex.`;
        }
        return true;
    }}
}

Person {
    Names.FullName name;
    String address;
    Email email;
}

Teacher {
    extends Person;
    list String subjects;
}

Classroom {
    Teacher teacher;
    String roomNumber;
    list Kid kids;
}

School {
    String name;
    Person principal;
    list Classroom rooms;
    validator Javascript {{
        // In Javascript, creates a JSON object
        // No matter what language, creates a dictionary/list/strings
        let prince = @@principal;
        return true;
    }}
}

School school;
school.name = 'Creekwater Elementary';

Person p(given, family, address, email) {
    name.givenName.value = given;
    name.familyName.value = family;
    address = address;
    email = email;
}

Email e(email) {
    value = email;
}

school.principal = p('Jane', 'Smith' '1354 5th St, Apartment 21', e('jsmith@gmail.com'));

Classroom c(teacher,room,kids) {
    teacher = teacher;
    roomNumber = room;
    kids = kids;
}

Teacher t(given, family, address, email, subjects) {
    name.givenName.value = given;
    name.familyName.value = family;
    address = address;
    email = email;
    subjects = subjects;
}

Kid k(given, family, favColor, favFoods) {
    name.givenName.value = given;
    name.familyName.value = family;
    favoriteColor.value = favColor;
    favoriteFoods = favFoods;
}

Food f(food) {
    value = food;
}

school.rooms=[
    c(
        t('Adam','Brown','940 W Cherry St.',e('adam.brown34@gmail.com'),['Chemistry','Algebra']),
        '125B',
        [
            k('Erick','Faller','Magenta',[f('Pizza'),f('Pancakes')]),
            k('Carrie','Dejarnette','Orange',[f('Pasta'),f('Mac and Cheese')]),
            k('Dean','Lacombe','Purple',[f('Gravy'),f('Doritos')]),
            k('Emmy','Greenland','Blue',[f('Tacos'),f('Mango')]),
            k('Shanika','Secrest','Blue',[f('Eggs'),f('Fried Chicken')]),
            k('Matilde','Mazzola','Red',[f('Ice Cream'),f('Turkey')]),
            k('Megan','Monk','Orange',[f('Cranberry'),f('Pancakes')]),
            k('Santa','Pietrowski','Blue',[f('Cookies'),f('Doritos')]),
            k('Katharyn','Chun','Green',[f('Fried Chicken'),f('Fried Chicken')]),
            k('Amelia','Avilla','Blue',[f('Chocolate Covered Strawberries'),f('Chocolate Cake')]),
            k('Carie','Clopton','Red',[f('Orange'),f('Chocolate Cake')]),
            k('Arline','Vencill','Purple',[f('Honeydew'),f('Apple Sauce')]),
            k('Francesco','Kies','Blue',[f('Blueberries'),f('Pudding')]),
            k('Awilda','Heatherington','Yellow',[f('Pizza'),f('Pancakes')]),
            k('Marilu','Tippie','Green',[f('Cheesecake'),f('Ribs')]),
            k('Bradley','Ronco','Cyan',[f('Apple Pie'),f('Apple Sauce')]),
            k('Ronna','Foucher','Silver',[f('Ice Cream'),f('Donuts')]),
            k('Yuette','Marini','Blue',[f('Pumpkin Pie'),f('Fried Chicken')]),
            k('Enedina','Mckissack','Red',[f('Lasagna'),f('Chocolate Cake')]),
            k('Aron','Crossland','Green',[f('Ham'),f('Pudding')]),
        ]
    ),
    c(
        t('Julie', 'Waybright', '12 Ferry Way', e('sillyspazmonkey@gmail.com'), ['American History', 'Government']),
        '123',
        [
            k('Harvir', 'Crosby', 'Green', [f('Pancakes'),f('Chocolate Cake')]),
            k('Samuel', 'Kirk', 'Red', [f('Ribs'),f('Chocolate Cake')]),
            k('Bayley', 'Bullock', 'Blue', [f('Pizza'),f('Ginger Bread')]),
            k('Abraham', 'Barrett', 'Orange', [f('Ribs'),f('Mac and Cheese')]),
            k('Cadence', 'Fry', 'Magenta', [f('Donuts'),f('Pancakes')]),
            k('Corrie', 'Roche', 'Blue', [f('Pizza'),f('Donuts')]),
            k('Enrique', 'Lewis', 'Pink', [f('Pizza'),f('Chocolate Cake')]),
            k('Santa', 'Pietrowski', 'Navy', [f('Mac and Cheese'),f('Donuts')]),
            k('Laith', 'Handley', 'Brown', [f('Fried Chicken'),f('Ginger Bread')]),
            k('Chester', 'Rubio', 'Red', [f('Pancakes'),f('Chocolate Cake')]),
            k('Junior', 'Pittman', 'Blue', [f('Mango'),f('Doritos')]),
            k('Lawrence', 'Acevedo', 'Purple', [f('Pizza'),f('Ginger Bread')]),
            k('Nafeesa', 'Wheeler', 'Cyan', [f('Pudding'),f('Pudding')]),
            k('Chris', 'Ramirez', 'Red', [f('Pizza'),f('Mac and Cheese')]),
            k('Jareth', 'Lozano', 'Orange', [f('Mango'),f('Turkey')]),
            k('Colette', 'Combs', 'Orange', [f('Pancakes'),f('Turkey')]),
            k('Glenn', 'Wormald', 'Blue', [f('Fried Chicken'),f('Chocolate Cake')]),
            k('Portia', 'Poole', 'Yellow', [f('Pizza'),f('Mac and Cheese')]),
            k('Atticus', 'Collier', 'Blue', [f('Apple Sauce'),f('Chocolate Cake')]),
            k('Yisroel', 'Ross', 'Green', [f('Doritos'),f('Apple Sauce')]),
        ]
    )
];