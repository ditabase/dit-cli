{
  "dits": [
    {
      "long": true,
      "type": "succeed",
      "title": "guest, blank code",
      "dit": "getConfig();\npull JavaScript from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig JavaScript\nfunc jsPrint() {||}\njsPrint();",
      "expected": "Finished successfully\n"
    },
    {
      "long": true,
      "type": "succeed",
      "title": "guest, js print",
      "dit": "getConfig();\npull JavaScript from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig JavaScript\nfunc jsPrint() {|\n    <|print('message from JavaScript');|>\n|}\njsPrint();",
      "expected": "message from JavaScript\n"
    },
    {
      "long": true,
      "type": "succeed",
      "title": "guest, py print",
      "dit": "getConfig();\npull Python from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig Python func pyPrint() {|\n    <|print('message from Python');|>\n|}\npyPrint();",
      "expected": "message from Python\n"
    },
    {
      "long": true,
      "type": "succeed",
      "title": "guest, lua print",
      "dit": "getConfig();\npull Lua from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig Lua func luaPrint() {|\n    <|print('message from Lua');|>\n|}\nluaPrint();",
      "expected": "message from Lua"
    },
    {
      "long": true,
      "type": "succeed",
      "title": "guest, js value",
      "dit": "getConfig();\npull JavaScript from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig Str JavaScript func jsValue(Str value) {|\n    <| return (|'\"' + 'Value from JavaScript: ' + <|value;|> + '\"'|);|>\n|}\nprint(jsValue('dog'));",
      "expected": "Value from JavaScript: dog\n"
    },
    {
      "long": true,
      "type": "succeed",
      "title": "guest, py value",
      "dit": "getConfig();\npull Python from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig Str Python func pyValue(Str value) {|\n    <| return (|'\"' + 'Value from Python: ' + <|value;|> + '\"'|);|>\n|}\nprint(pyValue('cat'));",
      "expected": "Value from Python: cat\n"
    },
    {
      "long": true,
      "type": "succeed",
      "title": "guest, lua value",
      "dit": "getConfig();\npull Lua from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig Str Lua func luaValue(Str value) {|\n    <| return (|'\"' .. 'Value from Lua: ' .. <|value;|> .. '\"'|);|>\n|}\nprint(luaValue('bird'));",
      "expected": "Value from Lua: bird\n"
    },
    {
      "long": true,
      "type": "fail",
      "title": "guest, js crash",
      "dit": "getConfig();\npull JavaScript from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig JavaScript func jsCrash(Str value) {|\n    const a = 1;const a = 1;\n|}\njsCrash('cat');",
      "expected": "Line: 6 Col: 1 (tests/fail.dit)\njsCrash('cat');\n^\n\nCodeError: Crash from JavaScript in file /tmp/dit/JavaScript_func_jsCrash.js\nError message follows:\n\n/tmp/dit/JavaScript_func_jsCrash.js:2\n    const a = 1;const a = 1;\n                      ^\n\nSyntaxError: Identifier 'a' has already been declared\n    at wrapSafe (internal/modules/cjs/loader.js:1101:16)\n    at Module._compile (internal/modules/cjs/loader.js:1149:27)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1205:10)\n    at Module.load (internal/modules/cjs/loader.js:1034:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:923:14)\n    at Module.require (internal/modules/cjs/loader.js:1074:19)\n    at require (internal/modules/cjs/helpers.js:72:18)\n    at Socket.<anonymous> (/tmp/dit/JavaScript_guest_daemon.js:17:26)\n    at Socket.emit (events.js:315:20)\n    at addChunk (_stream_readable.js:296:12)"
    },
    {
      "long": true,
      "type": "fail",
      "title": "guest, py crash",
      "dit": "getConfig();\npull Python from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig Python func pyCrash(Str value) {|\n    test1 = test2\n|}\npyCrash('cat');",
      "expected": "Line: 6 Col: 1 (tests/fail.dit)\npyCrash('cat');\n^\n\nCodeError: Crash from Python in file /tmp/dit/Python_func_pyCrash.py\nError message follows:\n\nTraceback (most recent call last):\n  File \"/tmp/dit/Python_guest_daemon.py\", line 53, in _exe_ditlang_loop\n    res = script.reserved_name(exe_ditlang)\n  File \"/tmp/dit/Python_func_pyCrash.py\", line 2, in reserved_name\n    test1 = test2\nNameError: name 'test2' is not defined\n"
    },
    {
      "long": true,
      "type": "fail",
      "title": "guest, lua crash",
      "dit": "getConfig();\npull Lua from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig Lua func luaCrash(Str value) {|\n    test1;\n|}\nluaCrash('cat');",
      "expected": "Line: 6 Col: 1 (tests/fail.dit)\nluaCrash('cat');\n^\n\nCodeError: Crash from Lua in file /tmp/dit/Lua_func_luaCrash.lua\nError message follows:\n\nerror loading module 'Lua_func_luaCrash' from file '/tmp/dit/Lua_func_luaCrash.lua':\n\t/tmp/dit/Lua_func_luaCrash.lua:2: '=' expected near ';'"
    },
    {
      "long": true,
      "type": "succeed",
      "title": "guest, multi-add",
      "dit": "getConfig();\npull Python, JavaScript, Lua from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig JavaScript Str func jsAdd(Str num1, Str num2) {|\n    <|return (|'\"' + String(parseFloat(<|num1;|>) + parseFloat(<|num2;|>)) + '\"'|)|>;\n|}\nsig Python Str func pyAdd(Str num1, Str num2) {|\n    <|return (|'\"' + str(float(<|num1;|>) + float(<|num2;|>)) + '\"'|)|>;\n|}\nsig Lua Str func luaAdd(Str num1, Str num2) {|\n    <|return (|'\"' .. tostring(tonumber(<|num1;|>) .. tonumber(<|num2;|>)) .. '\"'|)|>;\n|}\nprint(jsAdd('1', '2'));\nprint(pyAdd('5', '9'));\nprint(luaAdd('3.1415', '2390'));",
      "expected": "3\n14.0\n3.14152390\n"
    },
    {
      "long": true,
      "type": "succeed",
      "title": "guest, hackathon",
      "dit": "getConfig();\npull JavaScript, Lua, Python from 'https://raw.githubusercontent.com/ditabase/dits/master/langs/commonLangs.dit';\nsig JavaScript Str func add(Str num1, Str num2) {|\n    <|return (|'\"' + String(parseFloat(<|num1;|>) + parseFloat(<|num2;|>)) + '\"'|)|>;\n|}\nsig Python listOf Str func addNums(listOf Str num_pairs) {|\n    num_strings = <|num_pairs;|>\n    result = []\n    for num_string in num_strings:\n        num1 = num_string[:num_string.find('-')]\n        num2 = num_string[num_string.find('-') + 1:]\n        result.append(<|add((|'\"' + num1 + '\"'|), (|'\"' + num2 + '\"'|));|>)\n    <|return (|result|);|>\n|}\nsig Lua listOf Str func run() {|\n    json = require(\"rxi-json-lua\")\n    nums = {\"3-8\",\"9-1\",\"10-2\",\"3-5\",\"1-3\"}\n    final = json.encode(nums)\n    <|listOf Str sums = addNums((|final|));|>\n    <|return sums;|>\n|}\nlistOf Str finalNums = run();\nprint(finalNums);",
      "expected": "[11,10,12,8,4]\n"
    }
  ]
}