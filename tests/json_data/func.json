{
  "dits": [
    {
      "type": "fail",
      "title": "sig, bare sig",
      "dit": "sig",
      "expected": "Line: 1 Col: 3 (tests/fail.dit)\nsig\n  ^\n\nSyntaxError: Expected 'func' to follow sig"
    },
    {
      "type": "fail",
      "title": "sig, duplicate Ditlang",
      "dit": "sig Ditlang Ditlang",
      "expected": "Line: 1 Col: 13 (tests/fail.dit)\nsig Ditlang Ditlang\n            ^\n\nSyntaxError: Language was already assigned"
    },
    {
      "type": "fail",
      "title": "sig, duplicate lang",
      "dit": "sig Ditlang Python",
      "expected": "Line: 1 Col: 13 (tests/fail.dit)\nsig Ditlang Python\n            ^\n\nSyntaxError: Language was already assigned"
    },
    {
      "type": "fail",
      "title": "sig, String var return type",
      "dit": "String test = 'cat';\nsig Ditlang test func test2() {{}}",
      "expected": "Line: 2 Col: 13 (tests/fail.dit)\nsig Ditlang test func test2() {{}}\n            ^\n\nSyntaxError: Expected Class or Lang, 'test' is of type 'String'"
    },
    {
      "type": "fail",
      "title": "sig, Dit var return type",
      "dit": "import classDit from 'tests/import2.dit';\nsig Ditlang classDit func test2() {{}}",
      "expected": "Line: 2 Col: 13 (tests/fail.dit)\nsig Ditlang classDit func test2() {{}}\n            ^\n\nSyntaxError: Expected Class or Lang, 'classDit' is of type 'Dit'"
    },
    {
      "type": "fail",
      "title": "sig, dotted return type, final was string",
      "dit": "class Test {{String test1 = 'cat';}}\nsig Ditlang Test.test1 func test2() {{}}",
      "expected": "Line: 2 Col: 18 (tests/fail.dit)\nsig Ditlang Test.test1 func test2() {{}}\n                 ^\n\nSyntaxError: Expected Class or Lang, 'test1' is of type 'String'"
    },
    {
      "type": "fail",
      "title": "sig, dotted return type, final was list",
      "dit": "class Test {{listOf String test1 = ['cat'];}}\nsig Ditlang Test.test1 func test2() {{}}",
      "expected": "Line: 2 Col: 18 (tests/fail.dit)\nsig Ditlang Test.test1 func test2() {{}}\n                 ^\n\nSyntaxError: Expected Class or Lang, 'test1' is of type 'List'"
    },
    {
      "type": "fail",
      "title": "sig, listOf void",
      "dit": "func listOf void test(String out) {{}}",
      "expected": "Line: 1 Col: 6 (tests/fail.dit)\nfunc listOf void test(String out) {{}}\n     ^\n\nSyntaxError: Expected parameter list"
    },
    {
      "type": "fail",
      "title": "sig, misspelled JavaScript, did you mean?",
      "dit": "sig Javascript func test() {{}}",
      "expected": "Line: 1 Col: 5 (tests/fail.dit)\nsig Javascript func test() {{}}\n    ^\n\nSyntaxError: Did you mean 'JavaScript'?"
    },
    {
      "type": "fail",
      "title": "sig, too many switches",
      "dit": "sig Ditlang void String func test() {{}}",
      "expected": "Line: 1 Col: 18 (tests/fail.dit)\nsig Ditlang void String func test() {{}}\n                 ^\n\nSyntaxError: Expected 'func' to follow sig"
    },
    {
      "type": "fail",
      "title": "sig, listOf Ditlang",
      "dit": "sig listOf Ditlang func test() {{}}",
      "expected": "Line: 1 Col: 12 (tests/fail.dit)\nsig listOf Ditlang func test() {{}}\n           ^\n\nSyntaxError: Expected type to follow listOf"
    },
    {
      "type": "fail",
      "title": "sig, listOf func",
      "dit": "sig listOf func test() {{}}",
      "expected": "Line: 1 Col: 12 (tests/fail.dit)\nsig listOf func test() {{}}\n           ^\n\nSyntaxError: Expected type to follow listOf"
    },
    {
      "type": "fail",
      "title": "sig, String listOf",
      "dit": "sig String listOf func test() {{}}",
      "expected": "Line: 1 Col: 12 (tests/fail.dit)\nsig String listOf func test() {{}}\n           ^\n\nSyntaxError: Unexpected 'listOf' after type"
    },
    {
      "type": "fail",
      "title": "func, bare func",
      "dit": "func",
      "expected": "Line: 1 Col: 4 (tests/fail.dit)\nfunc\n   ^\n\nSyntaxError: Expected parameter list"
    },
    {
      "type": "fail",
      "title": "func, name but no parameter list",
      "dit": "func test",
      "expected": "Line: 1 Col: 9 (tests/fail.dit)\nfunc test\n        ^\n\nSyntaxError: Expected parameter list"
    },
    {
      "type": "fail",
      "title": "func, anon, no body",
      "dit": "func () String test = 'cat';",
      "expected": "Line: 1 Col: 9 (tests/fail.dit)\nfunc () String test = 'cat';\n        ^\n\nSyntaxError: Expected function body"
    },
    {
      "type": "fail",
      "title": "func, no body",
      "dit": "func test() String test2 = 'cat';",
      "expected": "Line: 1 Col: 13 (tests/fail.dit)\nfunc test() String test2 = 'cat';\n            ^\n\nSyntaxError: Expected function body"
    },
    {
      "type": "fail",
      "title": "func, dotted parameter type, final was string",
      "dit": "class Test {{String test1 = 'cat';}}\nfunc test2(Test.test1 param) {{}}",
      "expected": "Line: 2 Col: 17 (tests/fail.dit)\nfunc test2(Test.test1 param) {{}}\n                ^\n\nSyntaxError: Expected class for parameter type, 'test1' is of type 'String'"
    },
    {
      "type": "fail",
      "title": "func, missing parameter type",
      "dit": "func test(param) {{}}",
      "expected": "Line: 1 Col: 11 (tests/fail.dit)\nfunc test(param) {{}}\n          ^\n\nSyntaxError: Expected parameter type"
    },
    {
      "type": "fail",
      "title": "func, missing parameter name",
      "dit": "func test(String, ) {{}}",
      "expected": "Line: 1 Col: 17 (tests/fail.dit)\nfunc test(String, ) {{}}\n                ^\n\nSyntaxError: Expected parameter name"
    },
    {
      "type": "fail",
      "title": "func, duplicate function name",
      "dit": "func test() {{}}\nsig String func test() {{}}\nString test2 = 'cat';",
      "expected": "Line: 2 Col: 17 (tests/fail.dit)\nsig String func test() {{}}\n                ^\n\nSyntaxError: 'test' has already been declared"
    },
    {
      "type": "fail",
      "title": "func, duplicate function name, with class return type",
      "dit": "class Number {{class Decimal {{}}}}\nString test = 'cat';\nsig Number func test() {{}};",
      "expected": "Line: 3 Col: 17 (tests/fail.dit)\nsig Number func test() {{}};\n                ^\n\nSyntaxError: 'test' has already been declared"
    },
    {
      "type": "fail",
      "title": "func, duplicate function name, with dotted class return type",
      "dit": "class Number {{class Decimal {{}}}}\nString test = 'cat';\nsig Number.Decimal func test() {{}};",
      "expected": "Line: 3 Col: 25 (tests/fail.dit)\nsig Number.Decimal func test() {{}};\n                        ^\n\nSyntaxError: 'test' has already been declared"
    },
    {
      "type": "fail",
      "title": "func, duplicate parameter name/same as attribute, already declared",
      "dit": "String test = 'cat';\nfunc test2(String test) {{}}",
      "expected": "Line: 2 Col: 19 (tests/fail.dit)\nfunc test2(String test) {{}}\n                  ^\n\nSyntaxError: 'test' has already been declared"
    },
    {
      "type": "fail",
      "title": "func, duplicate parameter name/same as parameter",
      "dit": "sig String func test(String param, String param) {{}}",
      "expected": "Line: 1 Col: 43 (tests/fail.dit)\nsig String func test(String param, String param) {{}}\n                                          ^\n\nSyntaxError: 'param' is already a parameter name"
    },
    {
      "type": "success",
      "title": "func, vanilla Ditlang void",
      "dit": "func test() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "func, String return",
      "dit": "sig String func test() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "func, anon, vanilla Ditlang void",
      "dit": "func () {{}};",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "func, anon, String return",
      "dit": "sig String func () {{}};",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "func, anon, vanilla Ditlang void",
      "dit": "func () {{}};",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "func, class return type",
      "dit": "class A {{class B {{}}}}\nsig A func test() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "func, class return type, inner class",
      "dit": "class A {{class B {{}}}}\nsig A.B func test() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "func, imported class return type",
      "dit": "import classDit from 'tests/import2.dit';\nsig classDit.A func test2() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "func, imported class return type, inner class",
      "dit": "import classDit from 'tests/import2.dit';\nsig classDit.A.B func test2() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "func, vanilla Python",
      "dit": "sig Python func test() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "func, vanilla JavaScript",
      "dit": "sig JavaScript func test() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "sig, Thing return",
      "dit": "sig Thing func test() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "sig, String return",
      "dit": "sig String func test() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "sig, Class return",
      "dit": "sig Class func test() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "sig, listOf Thing return",
      "dit": "sig listOf Thing func test() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "sig, listOf String return",
      "dit": "sig listOf String func test() {{}}",
      "expected": "Finished successfully\n"
    },
    {
      "type": "success",
      "title": "sig, listOf Class return",
      "dit": "sig listOf Class func test() {{}}",
      "expected": "Finished successfully\n"
    }
  ]
}